myfcs2 = Subset( myfcs, my.filter )
mydata = data.frame(log10(myfcs2@exprs))
mynames = names(mydata)
current.FLX = mydata$FL1.H   ### default for DHR; change here for other probes
# if ( myp =='DHE') { current.FLX = mydata$FL3.H } #change here for other probes ##use stringr detect to change here !!!
if( str_detect(myfl.full, perl("DHE"))) {  current.FLX = mydata$FL3.H }; #2012June 14 change
merged.FLX = cbind( merged.FLX, current.FLX)
oldnames = colnames( merged.FLX )
newnames = c(oldnames[-length(oldnames)], facFlList[i])
colnames( merged.FLX ) = newnames
} #i loop
merged.FLX = merged.FLX[,-1] ###2012 June 10, change
#boxplot
pdf( paste("batch-boxplot", mys, "pdf",sep="."),  width=10,height=11)
par(oma=c(2,12,2,2), las=1) #adjust margin for labels, 2012June10 add las=1
#par(mar=c(2,20,2,2), las=1) #adjust margin for labels
boxplot( as.data.frame(merged.FLX), horizontal=TRUE, main=getwd())
dev.off()
}#myp
#}#mys
#quit("yes")
mys
#2012 June 13, add patterns for DHR and DHE multiple channels, FL1, FL3
rm(list=ls())
debug = 0;
require(flowCore);  require(flowClust); require(hexbin); require(stringr)
mystrains=c("BY47","M32","M2","YPS")
mypatterns = c("DHR","DHE");
for(mys in mystrains) {
#for( myp in mypatterns ) {
# currentPattern = paste(mys, "*", myp, sep='')
List1 = list.files( path="fcs", pattern = mys );
Blanks = list.files( path="fcs", pattern = "BLANK");
#facFlList = sort( c(facFlList, facFlList2))
DHEfile = sort( c(List1[ str_detect(List1, perl("DHE")) ], Blanks) )
DHRfile = sort( c(List1[ str_detect(List1, perl("DHR")) ], Blanks ) )
facFlList = c(DHRfile, DHEfile);
#generate a dataframe
Row.Len = 5E3;
merged.FLX = matrix(data=NA, nrow=Row.Len,ncol=1)
names(merged.FLX) = c("tmp")
#for( i in 1:4) {
for (  i in 1: length(facFlList) ) {
# i = 1;
myfl.full = paste( 'fcs/', facFlList[i], sep='');
myfcs = read.FCS( myfl.full );
# if(debug>0) {    myfcs@exprs = myfcs@exprs[1:Row.Len, ]   }
#remove debris. pcp1D has much broad distribution and has to be done separately
my.gate = rectangleGate(filterId="Cells", list("FSC-H"=c(2.5E2, Inf), "SSC-H"=c(2.5E2, Inf), "FL3-H"=c(0, Inf) ))
my.filter = filter( myfcs, my.gate)
myfcs2 = Subset( myfcs, my.filter )
mydata = data.frame(log10(myfcs2@exprs))
mynames = names(mydata)
current.FLX = mydata$FL1.H   ### default for DHR; change here for other probes
# if ( myp =='DHE') { current.FLX = mydata$FL3.H } #change here for other probes ##use stringr detect to change here !!!
if( str_detect(myfl.full, perl("DHE"))) {  current.FLX = mydata$FL3.H }; #2012June 14 change
merged.FLX = cbind( merged.FLX, current.FLX)
oldnames = colnames( merged.FLX )
newnames = c(oldnames[-length(oldnames)], facFlList[i])
colnames( merged.FLX ) = newnames
} #i loop
merged.FLX = merged.FLX[,-1] ###2012 June 10, change
#boxplot
pdf( paste("batch-boxplot", mys, "pdf",sep="."),  width=10,height=11)
par(oma=c(2,12,2,2), las=1) #adjust margin for labels, 2012June10 add las=1
#par(mar=c(2,20,2,2), las=1) #adjust margin for labels
boxplot( as.data.frame(merged.FLX), horizontal=TRUE, main=getwd())
dev.off()
}#myp
#}#mys
#quit("yes")
#2012 June 13, add patterns for DHR and DHE multiple channels, FL1, FL3
rm(list=ls())
debug = 0;
require(flowCore);  require(flowClust); require(hexbin); require(stringr)
mystrains=c("BY47","M32","M2","YPS")
mypatterns = c("DHR","DHE");
for(mys in mystrains) {
List1 = list.files( path="fcs", pattern = mys );
Blanks =  List1[ str_detect(List1, perl("BLANK")) ]
DHEfile = sort( c(List1[ str_detect(List1, perl("DHE")) ], Blanks) )
DHRfile = sort( c(List1[ str_detect(List1, perl("DHR")) ], Blanks ) )
facFlList = c(DHRfile, DHEfile);
#generate a dataframe
Row.Len = 5E3;
merged.FLX = matrix(data=NA, nrow=Row.Len,ncol=1)
names(merged.FLX) = c("tmp")
#for( i in 1:4) {
for (  i in 1: length(facFlList) ) {
# i = 1;
myfl.full = paste( 'fcs/', facFlList[i], sep='');
myfcs = read.FCS( myfl.full );
# if(debug>0) {    myfcs@exprs = myfcs@exprs[1:Row.Len, ]   }
#remove debris. pcp1D has much broad distribution and has to be done separately
my.gate = rectangleGate(filterId="Cells", list("FSC-H"=c(2.5E2, Inf), "SSC-H"=c(2.5E2, Inf), "FL3-H"=c(0, Inf) ))
my.filter = filter( myfcs, my.gate)
myfcs2 = Subset( myfcs, my.filter )
mydata = data.frame(log10(myfcs2@exprs))
mynames = names(mydata)
current.FLX = mydata$FL1.H   ### default for DHR; change here for other probes
# if ( myp =='DHE') { current.FLX = mydata$FL3.H } #change here for other probes ##use stringr detect to change here !!!
if( str_detect(myfl.full, perl("DHE"))) {  current.FLX = mydata$FL3.H }; #2012June 14 change
if (length(current.FLX) gt Row.len ) {current.FLX = current.FLX[1:Row.len]
} else if (length(current.FLX lt Row.len)) {
current.FLX = c(current.FLX, rep(NA, (Row.len - length(current.FLX))))
}
merged.FLX = cbind( merged.FLX, current.FLX)
oldnames = colnames( merged.FLX )
newnames = c(oldnames[-length(oldnames)], facFlList[i])
colnames( merged.FLX ) = newnames
} #i loop
merged.FLX = merged.FLX[,-1] ###2012 June 10, change
#boxplot
pdf( paste("batch-boxplot", mys, "pdf",sep="."),  width=10,height=11)
par(oma=c(2,12,2,2), las=1) #adjust margin for labels, 2012June10 add las=1
#par(mar=c(2,20,2,2), las=1) #adjust margin for labels
boxplot( as.data.frame(merged.FLX), horizontal=TRUE, main=getwd())
dev.off()
}#mys
#quit("yes")
#2012 June 13, add patterns for DHR and DHE multiple channels, FL1, FL3
rm(list=ls())
debug = 0;
require(flowCore);  require(flowClust); require(hexbin); require(stringr)
mystrains=c("BY47","M32","M2","YPS")
mypatterns = c("DHR","DHE");
List1 = list.files( path="fcs", pattern = mys );
Blanks =  List1[ str_detect(List1, perl("BLANK")) ]
DHEfile = sort( c(List1[ str_detect(List1, perl("DHE")) ], Blanks) )
DHRfile = sort( c(List1[ str_detect(List1, perl("DHR")) ], Blanks ) )
facFlList = c(DHRfile, DHEfile);
#generate a dataframe
Row.Len = 5E3;
merged.FLX = matrix(data=NA, nrow=Row.Len,ncol=1)
names(merged.FLX) = c("tmp")
mys = "BY4743"
List1 = list.files( path="fcs", pattern = mys );
Blanks =  List1[ str_detect(List1, perl("BLANK")) ]
DHEfile = sort( c(List1[ str_detect(List1, perl("DHE")) ], Blanks) )
DHRfile = sort( c(List1[ str_detect(List1, perl("DHR")) ], Blanks ) )
facFlList = c(DHRfile, DHEfile);
#generate a dataframe
Row.Len = 5E3;
merged.FLX = matrix(data=NA, nrow=Row.Len,ncol=1)
names(merged.FLX) = c("tmp")
i=1
myfl.full = paste( 'fcs/', facFlList[i], sep='');
myfcs = read.FCS( myfl.full );
# if(debug>0) {    myfcs@exprs = myfcs@exprs[1:Row.Len, ]   }
#remove debris. pcp1D has much broad distribution and has to be done separately
my.gate = rectangleGate(filterId="Cells", list("FSC-H"=c(2.5E2, Inf), "SSC-H"=c(2.5E2, Inf), "FL3-H"=c(0, Inf) ))
my.filter = filter( myfcs, my.gate)
myfcs2 = Subset( myfcs, my.filter )
mydata = data.frame(log10(myfcs2@exprs))
mynames = names(mydata)
current.FLX = mydata$FL1.H   ### default for DHR; change here for other probes
# if ( myp =='DHE') { current.FLX = mydata$FL3.H } #change here for other probes ##use stringr detect to change here !!!
if( str_detect(myfl.full, perl("DHE"))) {  current.FLX = mydata$FL3.H }; #2012June 14 change
if (length(current.FLX) gt Row.len ) {current.FLX = current.FLX[1:Row.len]
} else if (length(current.FLX lt Row.len)) {
current.FLX = c(current.FLX, rep(NA, (Row.len - length(current.FLX))))
}
merged.FLX = cbind( merged.FLX, current.FLX)
oldnames = colnames( merged.FLX )
newnames = c(oldnames[-length(oldnames)], facFlList[i])
colnames( merged.FLX ) = newnames
current.FLX
str(current.FLX)
if (length(current.FLX) gt Row.len ) {current.FLX = current.FLX[1:Row.len]
Row.len
if ( length(current.FLX) gt Row.Len ) {current.FLX = current.FLX[1:Row.Len]
} else if (length(current.FLX lt Row.Len)) {
current.FLX = c(current.FLX, rep(NA, (Row.Len - length(current.FLX))))
}
Row.Len
length(current.FLX) gt Row.Len
length(current.FLX) > Row.Len
if ( length(current.FLX) > Row.Len ) {current.FLX = current.FLX[1:Row.Len]
} else if (length(current.FLX < Row.Len)) {
current.FLX = c(current.FLX, rep(NA, (Row.Len - length(current.FLX))))
}
#2012 June 13, add patterns for DHR and DHE multiple channels, FL1, FL3
rm(list=ls())
debug = 0;
require(flowCore);  require(flowClust); require(hexbin); require(stringr)
mystrains=c("BY4743","M32","M2","YPS128")
mypatterns = c("DHR","DHE");
for(mys in mystrains) {
# mys = "BY4743"
List1 = list.files( path="fcs", pattern = mys );
Blanks =  List1[ str_detect(List1, perl("BLANK")) ]
DHEfile = sort( c(List1[ str_detect(List1, perl("DHE")) ], Blanks) )
DHRfile = sort( c(List1[ str_detect(List1, perl("DHR")) ], Blanks ) )
facFlList = c(DHRfile, DHEfile);
#generate a dataframe
Row.Len = 5E3;
merged.FLX = matrix(data=NA, nrow=Row.Len,ncol=1)
names(merged.FLX) = c("tmp")
for( i in 1:4) {
#for (  i in 1: length(facFlList) ) {
# i = 1;
myfl.full = paste( 'fcs/', facFlList[i], sep='');
myfcs = read.FCS( myfl.full );
# if(debug>0) {    myfcs@exprs = myfcs@exprs[1:Row.Len, ]   }
#remove debris. pcp1D has much broad distribution and has to be done separately
my.gate = rectangleGate(filterId="Cells", list("FSC-H"=c(2.5E2, Inf), "SSC-H"=c(2.5E2, Inf), "FL3-H"=c(0, Inf) ))
my.filter = filter( myfcs, my.gate)
myfcs2 = Subset( myfcs, my.filter )
mydata = data.frame(log10(myfcs2@exprs))
mynames = names(mydata)
current.FLX = mydata$FL1.H   ### default for DHR; change here for other probes
# if ( myp =='DHE') { current.FLX = mydata$FL3.H } #change here for other probes ##use stringr detect to change here !!!
if( str_detect(myfl.full, perl("DHE"))) {  current.FLX = mydata$FL3.H }; #2012June 14 change
if ( length(current.FLX) > Row.Len ) {current.FLX = current.FLX[1:Row.Len]
} else if (length(current.FLX < Row.Len)) {
current.FLX = c(current.FLX, rep(NA, (Row.Len - length(current.FLX))))
}
merged.FLX = cbind( merged.FLX, current.FLX)
oldnames = colnames( merged.FLX )
newnames = c(oldnames[-length(oldnames)], facFlList[i])
colnames( merged.FLX ) = newnames
} #i loop
merged.FLX = merged.FLX[,-1] ###2012 June 10, change
#boxplot
pdf( paste("batch-boxplot", mys, "pdf",sep="."),  width=10,height=11)
par(oma=c(2,12,2,2), las=1) #adjust margin for labels, 2012June10 add las=1
#par(mar=c(2,20,2,2), las=1) #adjust margin for labels
boxplot( as.data.frame(merged.FLX), horizontal=TRUE, main=getwd())
dev.off()
}#mys
#quit("yes")
#2012 June 13, add patterns for DHR and DHE multiple channels, FL1, FL3
rm(list=ls())
debug = 0;
require(flowCore);  require(flowClust); require(hexbin); require(stringr)
mystrains=c("BY4743","M32","M2","YPS128")
mypatterns = c("DHR","DHE");
for(mys in mystrains) {
# mys = "BY4743"
List1 = list.files( path="fcs", pattern = mys );
Blanks =  List1[ str_detect(List1, perl("BLANK")) ]
DHEfile = sort( c(List1[ str_detect(List1, perl("DHE")) ], Blanks) )
DHRfile = sort( c(List1[ str_detect(List1, perl("DHR")) ], Blanks ) )
facFlList = c(DHRfile, DHEfile);
#generate a dataframe
Row.Len = 5E3;
merged.FLX = matrix(data=NA, nrow=Row.Len,ncol=1)
names(merged.FLX) = c("tmp")
#for( i in 1:4) {
for (  i in 1: length(facFlList) ) {
# i = 1;
myfl.full = paste( 'fcs/', facFlList[i], sep='');
myfcs = read.FCS( myfl.full );
# if(debug>0) {    myfcs@exprs = myfcs@exprs[1:Row.Len, ]   }
#remove debris. pcp1D has much broad distribution and has to be done separately
my.gate = rectangleGate(filterId="Cells", list("FSC-H"=c(2.5E2, Inf), "SSC-H"=c(2.5E2, Inf), "FL3-H"=c(0, Inf) ))
my.filter = filter( myfcs, my.gate)
myfcs2 = Subset( myfcs, my.filter )
mydata = data.frame(log10(myfcs2@exprs))
mynames = names(mydata)
current.FLX = mydata$FL1.H   ### default for DHR; change here for other probes
# if ( myp =='DHE') { current.FLX = mydata$FL3.H } #change here for other probes ##use stringr detect to change here !!!
if( str_detect(myfl.full, perl("DHE"))) {  current.FLX = mydata$FL3.H }; #2012June 14 change
if ( length(current.FLX) > Row.Len ) {current.FLX = current.FLX[1:Row.Len]
} else if (length(current.FLX < Row.Len)) {
current.FLX = c(current.FLX, rep(NA, (Row.Len - length(current.FLX))))
}
merged.FLX = cbind( merged.FLX, current.FLX)
oldnames = colnames( merged.FLX )
newnames = c(oldnames[-length(oldnames)], facFlList[i])
colnames( merged.FLX ) = newnames
} #i loop
merged.FLX = merged.FLX[,-1] ###2012 June 10, change
#boxplot
pdf( paste("batch-boxplot", mys, "pdf",sep="."),  width=10,height=11)
par(oma=c(2,12,2,2), las=1) #adjust margin for labels, 2012June10 add las=1
#par(mar=c(2,20,2,2), las=1) #adjust margin for labels
boxplot( as.data.frame(merged.FLX), horizontal=TRUE, main=getwd())
dev.off()
}#mys
#quit("yes")
mys
i
#2012 June 13, add patterns for DHR and DHE multiple channels, FL1, FL3
rm(list=ls())
debug = 0;
require(flowCore);  require(flowClust); require(hexbin); require(stringr)
mystrains=c("BY4743","M2","YPS128", "M32")
mypatterns = c("DHR","DHE");
for(mys in mystrains) {
# mys = "BY4743"
List1 = list.files( path="fcs", pattern = mys );
Blanks =  List1[ str_detect(List1, perl("BLANK")) ]
DHEfile = sort( c(List1[ str_detect(List1, perl("DHE")) ], Blanks) )
DHRfile = sort( c(List1[ str_detect(List1, perl("DHR")) ], Blanks ) )
facFlList = c(DHRfile, DHEfile);
#generate a dataframe
Row.Len = 5E3;
merged.FLX = matrix(data=NA, nrow=Row.Len,ncol=1)
names(merged.FLX) = c("tmp")
#for( i in 1:4) {
for (  i in 1: length(facFlList) ) {
# i = 1;
myfl.full = paste( 'fcs/', facFlList[i], sep='');
myfcs = read.FCS( myfl.full );
# if(debug>0) {    myfcs@exprs = myfcs@exprs[1:Row.Len, ]   }
#remove debris. pcp1D has much broad distribution and has to be done separately
my.gate = rectangleGate(filterId="Cells", list("FSC-H"=c(2.5E2, Inf), "SSC-H"=c(2.5E2, Inf), "FL3-H"=c(0, Inf) ))
my.filter = filter( myfcs, my.gate)
myfcs2 = Subset( myfcs, my.filter )
mydata = data.frame(log10(myfcs2@exprs))
mynames = names(mydata)
current.FLX = mydata$FL1.H   ### default for DHR; change here for other probes
# if ( myp =='DHE') { current.FLX = mydata$FL3.H } #change here for other probes ##use stringr detect to change here !!!
if( str_detect(myfl.full, perl("DHE"))) {  current.FLX = mydata$FL3.H }; #2012June 14 change
if ( length(current.FLX) > Row.Len ) {current.FLX = current.FLX[1:Row.Len]
} else if (length(current.FLX < Row.Len)) {
current.FLX = c(current.FLX, rep(NA, (Row.Len - length(current.FLX))))
}
merged.FLX = cbind( merged.FLX, current.FLX)
oldnames = colnames( merged.FLX )
newnames = c(oldnames[-length(oldnames)], facFlList[i])
colnames( merged.FLX ) = newnames
} #i loop
merged.FLX = merged.FLX[,-1] ###2012 June 10, change
#boxplot
pdf( paste("batch-boxplot", mys, "pdf",sep="."),  width=10,height=11)
par(oma=c(2,12,2,2), las=1) #adjust margin for labels, 2012June10 add las=1
#par(mar=c(2,20,2,2), las=1) #adjust margin for labels
boxplot( as.data.frame(merged.FLX), horizontal=TRUE, main=getwd())
dev.off()
}#mys
#quit("yes")
mys
i
#2012 June 13, add patterns for DHR and DHE multiple channels, FL1, FL3
rm(list=ls())
debug = 0;
require(flowCore);  require(flowClust); require(hexbin); require(stringr)
mystrains=c("BY4743","M2","YPS128", "M32")
mypatterns = c("DHR","DHE");
for(mys in mystrains) {
# mys = "BY4743"
List1 = list.files( path="fcs", pattern = mys );
Blanks =  List1[ str_detect(List1, perl("BLANK")) ]
DHEfile = sort( c(List1[ str_detect(List1, perl("DHE")) ], Blanks) )
DHRfile = sort( c(List1[ str_detect(List1, perl("DHR")) ], Blanks ) )
facFlList = c(DHRfile, DHEfile);
#generate a dataframe
Row.Len = 5E3;
merged.FLX = matrix(data=NA, nrow=Row.Len,ncol=1)
names(merged.FLX) = c("tmp")
#for( i in 1:4) {
for (  i in 1: length(facFlList) ) {
# i = 1;
myfl.full = paste( 'fcs/', facFlList[i], sep='');
myfcs = read.FCS( myfl.full );
# if(debug>0) {    myfcs@exprs = myfcs@exprs[1:Row.Len, ]   }
#remove debris. pcp1D has much broad distribution and has to be done separately
my.gate = rectangleGate(filterId="Cells", list("FSC-H"=c(2.5E2, Inf), "SSC-H"=c(2.5E2, Inf), "FL3-H"=c(0, Inf) ))
my.filter = filter( myfcs, my.gate)
myfcs2 = Subset( myfcs, my.filter )
mydata = data.frame(log10(myfcs2@exprs))
mynames = names(mydata)
current.FLX = mydata$FL1.H   ### default for DHR; change here for other probes
# if ( myp =='DHE') { current.FLX = mydata$FL3.H } #change here for other probes ##use stringr detect to change here !!!
if( str_detect(myfl.full, perl("DHE"))) {  current.FLX = mydata$FL3.H }; #2012June 14 change
if ( length(current.FLX) > Row.Len ) {current.FLX = current.FLX[1:Row.Len]
} else if (length(current.FLX < Row.Len)) {
current.FLX = c(current.FLX, rep(NA, (Row.Len - length(current.FLX))))
}
merged.FLX = cbind( merged.FLX, current.FLX)
oldnames = colnames( merged.FLX )
newnames = c(oldnames[-length(oldnames)], facFlList[i])
colnames( merged.FLX ) = newnames
} #i loop
merged.FLX = merged.FLX[,-1] ###2012 June 10, change
#boxplot
pdf( paste("batch-boxplot", mys, "pdf",sep="."),  width=10,height=11)
par(oma=c(2,12,2,2), las=1) #adjust margin for labels, 2012June10 add las=1
#par(mar=c(2,20,2,2), las=1) #adjust margin for labels
boxplot( as.data.frame(merged.FLX), horizontal=TRUE, main=getwd())
dev.off()
}#mys
#quit("yes")
setwd("~/lab/spelman.lab/calibur/lab/20120612H202DHRDHE")
#2012 June 13, add patterns for DHR and DHE multiple channels, FL1, FL3
rm(list=ls())
debug = 0;
require(flowCore);  require(flowClust); require(hexbin)
mypatterns = c("DHR","DHE");
for( myp in mypatterns ) {
facFlList = list.files( path="fcs", pattern = myp);  facFlList
facFlList2 = list.files( path="fcs", pattern = "BLANK");  facFlList2
facFlList = sort( c(facFlList, facFlList2))
#generate a dataframe
Row.Len = 5E3;
merged.FLX = matrix(data=NA, nrow=Row.Len,ncol=1)
names(merged.FLX) = c("tmp")
#for( i in 1:4) {
for (  i in 1: length(facFlList) ) {
# i = 1;
myfl.full = paste( 'fcs/', facFlList[i], sep='');
myfcs = read.FCS( myfl.full );
# if(debug>0) {    myfcs@exprs = myfcs@exprs[1:Row.Len, ]   }
#remove debris. pcp1D has much broad distribution and has to be done separately
my.gate = rectangleGate(filterId="Cells", list("FSC-H"=c(2.5E2, Inf), "SSC-H"=c(2.5E2, Inf), "FL3-H"=c(0, Inf) ))
my.filter = filter( myfcs, my.gate)
myfcs2 = Subset( myfcs, my.filter )
mydata = data.frame(log10(myfcs2@exprs))
mynames = names(mydata)
current.FLX = mydata$FL1.H   ### default for DHR; change here for other probes
if ( myp =='DHE') { current.FLX = mydata$FL3.H } #change here for other probes
merged.FLX = cbind( merged.FLX, current.FLX)
oldnames = colnames( merged.FLX )
newnames = c(oldnames[-length(oldnames)], facFlList[i])
colnames( merged.FLX ) = newnames
} #i loop
merged.FLX = merged.FLX[,-1] ###2012 June 10, change
#boxplot
pdf( paste("batch-boxplot", myp, "pdf",sep="."),  width=10,height=11)
par(oma=c(2,12,2,2), las=1) #adjust margin for labels, 2012June10 add las=1
#par(mar=c(2,20,2,2), las=1) #adjust margin for labels
boxplot( as.data.frame(merged.FLX), horizontal=TRUE, main=getwd())
dev.off()
}#myp
#quit("yes")
setwd("~/lab/spelman.lab/calibur/lab/20120613-14H2O2overnightDHR,30minDHE")
rm(list=ls())
debug = 0;
require(flowCore);  require(flowClust); require(hexbin); require(stringr)
mystrains=c("BY4743","M2","YPS128", "M32")
mypatterns = c("DHR","DHE");
for(mys in mystrains) {
# mys = "BY4743"
List1 = list.files( path="fcs", pattern = mys );
Blanks =  List1[ str_detect(List1, perl("BLANK")) ]
DHEfile = sort( c(List1[ str_detect(List1, perl("DHE")) ], Blanks) )
DHRfile = sort( c(List1[ str_detect(List1, perl("DHR")) ], Blanks ) )
facFlList = c(DHRfile, DHEfile);
#generate a dataframe
Row.Len = 5E3;
merged.FLX = matrix(data=NA, nrow=Row.Len,ncol=1)
names(merged.FLX) = c("tmp")
#for( i in 1:4) {
for (  i in 1: length(facFlList) ) {
# i = 1;
myfl.full = paste( 'fcs/', facFlList[i], sep='');
myfcs = read.FCS( myfl.full );
# if(debug>0) {    myfcs@exprs = myfcs@exprs[1:Row.Len, ]   }
#remove debris. pcp1D has much broad distribution and has to be done separately
my.gate = rectangleGate(filterId="Cells", list("FSC-H"=c(2.5E2, Inf), "SSC-H"=c(2.5E2, Inf), "FL3-H"=c(0, Inf) ))
my.filter = filter( myfcs, my.gate)
myfcs2 = Subset( myfcs, my.filter )
mydata = data.frame(log10(myfcs2@exprs))
mynames = names(mydata)
current.FLX = mydata$FL1.H   ### default for DHR; change here for other probes
# if ( myp =='DHE') { current.FLX = mydata$FL3.H } #change here for other probes ##use stringr detect to change here !!!
if( str_detect(myfl.full, perl("DHE"))) {  current.FLX = mydata$FL3.H }; #2012June 14 change
if ( length(current.FLX) > Row.Len ) {current.FLX = current.FLX[1:Row.Len]
} else if (length(current.FLX < Row.Len)) {
current.FLX = c(current.FLX, rep(NA, (Row.Len - length(current.FLX))))
}
merged.FLX = cbind( merged.FLX, current.FLX)
oldnames = colnames( merged.FLX )
newnames = c(oldnames[-length(oldnames)], facFlList[i])
colnames( merged.FLX ) = newnames
} #i loop
merged.FLX = merged.FLX[,-1] ###2012 June 10, change
#boxplot
pdf( paste("batch-boxplot", mys, "pdf",sep="."),  width=10,height=11)
par(oma=c(2,12,2,2), las=1) #adjust margin for labels, 2012June10 add las=1
#par(mar=c(2,20,2,2), las=1) #adjust margin for labels
boxplot( as.data.frame(merged.FLX), horizontal=TRUE, main=getwd())
dev.off()
}#mys
#quit("yes")
setwd("~/lab/spelman.lab/calibur/lab/20120613-14H2O2overnightDHR,30minDHE")
# 2012 March 28. Qin add gate to filter the data.
#    It looks like the gates can changes substaintially between BY strains and wild isolates, which
#     poses problems for batch analysis.
rm(list=ls())
debug = 0;
require(flowCore);  require(flowClust);
facFlList = list.files( path="fcs/");  facFlList
for (  i in 1: length(facFlList) ) {
# i = 1;
myfl.full = paste( 'fcs/', facFlList[i], sep='');
myfcs = read.FCS( myfl.full );
if(debug>0) {    myfcs@exprs = myfcs@exprs[500:5500, ]   }
#remove debris, I used E03 before 2012 March 28.
my.gate = rectangleGate(filterId="Cells", list("FSC-H"=c(0.5E3, Inf), "SSC-H"=c(0.5E3, Inf), "FL3-H"=c(0, Inf) ))
my.filter = filter( myfcs, my.gate)
myfcs2 = Subset( myfcs, my.filter )
mydata = data.frame(log10(myfcs2@exprs))
mynames = names(mydata)
pdf(paste("sandbox/_", facFlList[i], ".pdf", sep=""), width=8, height=11);
par(new=T)
par(mfrow = c(3, 3))
for (j in 1:5 ) {
hist( mydata[,j], breaks=100, xlab=mynames[j], main= facFlList[i], xlim=c(0,4.5), freq=F )
}
plot( mydata[,2] ~ mydata[,1], pch=3, xlab=mynames[1], ylab=mynames[2], xlim=c(0,4.5), ylim=c(0,4.5))
plot( mydata[,5] ~ mydata[,1], pch=3, xlab=mynames[1], ylab=mynames[5], xlim=c(0,4.5), ylim=c(0,4.5))
plot( mydata[,4] ~ mydata[,1], pch=3, xlab=mynames[1], ylab=mynames[4], xlim=c(0,4.5), ylim=c(0,4.5))
#hexbin(x,y)
#plot( hexbin(mydata[,1], mydata[,2] ), pch=3, xlab=mynames[1], ylab=mynames[2], xlim=c(0,4.5), ylim=c(0,4.5))
#plot( hexbin(mydata[,1], mydata[,5] ), pch=3, xlab=mynames[1], ylab=mynames[5], xlim=c(0,4.5), ylim=c(0,4.5))
#plot( hexbin(mydata[,4] ~ mydata[,1]), pch=3, xlab=mynames[1], ylab=mynames[4], xlim=c(0,4.5), ylim=c(0,4.5))
dev.off();
} #i loop
quit("yes")
